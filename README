Main Modifications:
 * json configuration for window rules, views, font, terminal, dock position
 * rules can have window opacity (kind of useless since compton.conf can handle it)
 * rules can have prefered layout to switch to for a window
 * all colors read from a separate config file (using updateDwmColor.sh with colorart to extract colors from wallpaper)
 * gaps between tiled windows
 * systray (might get removed because of a possible incompatibility with latte-dock)
 * shortcut to toggle space for a dock (can be positioned on any side of the screen)
 * enough EWMH compliance to have dock able to auto hide (dodge windows), and switch to view with an open program
 * compatible with rofi
 * launches an instance of oclock on each monitor a startup
 * win-tab shortcut tries to never toggle to an empty view (as long as there are windows), in a most recently viewed order
 * special "v" layout for fullscreen windows (gets priority for win-tab view toggle)
 * mapping to send window to other monitor, or swap entire view
 * possible to remap any mouse button to a shortcut in a per-window-rule basis


For latte-dock, you need to have started /usr/lib/kactivitymanagerd to track opened programs
And you need to tweak its icon size to fit to space provided (or change the space size).


Original dwm README (from time of fork):

dwm - dynamic window manager
============================
dwm is an extremely fast, small, and dynamic window manager for X.


Requirements
------------
In order to build dwm you need the Xlib header files.


Installation
------------
Edit config.mk to match your local setup (dwm is installed into
the /usr/local namespace by default).

Afterwards enter the following command to build and install dwm (if
necessary as root):

    make clean install

If you are going to use the default bluegray color scheme it is highly
recommended to also install the bluegray files shipped in the dextra package.


Running dwm
-----------
Add the following line to your .xinitrc to start dwm using startx:

    exec dwm

In order to connect dwm to a specific display, make sure that
the DISPLAY environment variable is set correctly, e.g.:

    DISPLAY=foo.bar:1 exec dwm

(This will start dwm on display :1 of the host foo.bar.)

In order to display status info in the bar, you can do something
like this in your .xinitrc:

    while xsetroot -name "`date` `uptime | sed 's/.*,//'`"
    do
        sleep 20
    done &
    exec dwm


Configuration
-------------
The configuration of dwm is done by creating a custom config.h
and (re)compiling the source code.
